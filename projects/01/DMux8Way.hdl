// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor.
 * {a,b,c,d,e,f,g,h} = {in,0,0,0,0,0,0,0} if sel==000
 *                     {0,in,0,0,0,0,0,0} if sel==001
 *                     etc.
 *                     {0,0,0,0,0,0,0,in} if sel==111
 */


CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	//DMux4Way(in= ,sel= ,a= ,b= ,c= ,d= );
	//DMux8Way(in= ,sel= ,a= ,b= ,c= ,d= ,e= ,f= ,g= ,h= );
	
	Nand(a=sel[0],b=sel[0],out=temp0);
	Nand(a=sel[1],b=sel[1],out=temp1);
	Nand(a=sel[2],b=sel[2],out=temp2);
	////aaaa
	And(a=in,b=temp0,out=tempa0);
	And(a=temp1,b=temp2,out=tempa1);	
	And(a=tempa0,b=tempa1,out=a);
	///bbb
	And(a=in,b=sel[0],out=tempb0);
	And(a=temp1,b=temp2,out=tempb1);	
	And(a=tempb0,b=tempb1,out=b);
	///ccc
	And(a=in,b=temp0,out=tempc0);
	And(a=sel[1],b=temp2,out=tempc1);	
	And(a=tempc0,b=tempc1,out=c);
	///ddd
	And(a=in,b=sel[0],out=tempd0);
	And(a=sel[1],b=temp2,out=tempd1);	
	And(a=tempd0,b=tempd1,out=d);
	///eee
	And(a=in,b=temp0,out=tempe0);
	And(a=temp1,b=sel[2],out=tempe1);	
	And(a=tempe0,b=tempe1,out=e);
	///fff
	And(a=in,b=sel[0],out=tempf0);
	And(a=temp1,b=sel[2],out=tempf1);	
	And(a=tempf0,b=tempf1,out=f);
	///ggg
	And(a=in,b=temp0,out=tempg0);
	And(a=sel[1],b=sel[2],out=tempg1);	
	And(a=tempg0,b=tempg1,out=g);
	///hhh
	And(a=in,b=sel[0],out=temph0);
	And(a=sel[1],b=sel[2],out=temph1);	
	And(a=temph0,b=temph1,out=h);	
}